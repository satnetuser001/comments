2024.04.16
Familiarization with the technical task.
Learning of the functionality MySQL Workbench.
Created UML database diagram in MySQL Workbench and saved in a directory: comments/1-documentation/uml.

2024.04.17
Added some changes to the UML database diagram.
Initialized git repository:
	git init, git add ., git commit
Pushed repository to: github.com/satnetuser001/comments. Further work with Git will not be described, look at the commits.
Create database:
	CREATE DATABASE comments
	CHARACTER SET utf8mb4
	COLLATE utf8mb4_unicode_ci;
Create database user:
	CREATE USER 'comments_app'@'localhost' IDENTIFIED BY 'standart';
	the password is hidden because the development log will be on GitHub.
Grant privileges to database user:
	GRANT ALL PRIVILEGES ON comments.* TO 'comments_app'@'localhost';
Installed Laravel application:
	composer create-project --prefer-dist laravel/laravel .
!!!There was an error in the sequence of actions. The Laravel application cannot be installed in a non-empty directory. I had to temporarily transfer existing files.
Added database connection settings to the .env file.
Created migrations according to the UML diagram.
Applied the migrations.
Dumped DB in MYSQL into comments/1-documentation/mysqlDumpDB folder:
	mysqldump -uroot -p comments > comments.sql

2024.04.18
Make models for a tables comments and files:
	php artisan make:model Comment
	php artisan make:model File
Defined the fields available for mass assignment in models Comment and File.
Added one-to-many relationship methods between models User and Comment.
Added one-to-many relationship methods between models Comment and File.
Created a new seeder:
	php artisan make:seeder UsersCommentsSeeder
Added seeder functionality for populating the "Users" and "Comments" tables.
The database is filled with test data.

2024.04.19
Dumped DB with test data in MYSQL into comments/1-documentation/mysqlDumpDB folder:
	mysqldump -uroot -p comments > comments.sql
Created a Comment Controller with CRUD functionality:
	php artisan make:controller CommentController --resource

Adding a "Home Page" to the application to display all comments:
Created a Route.
Created a View "Home Page":
	php artisan make:view homePage
	php artisan make:view includes.commentTree
Into CommentController index method added logic.

Added pagination on "Home Page"